
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: buckets.storage.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.bindingPhase
    name: STATUS
    type: string
  - JSONPath: .spec.classRef.name
    name: CLASS
    type: string
  - JSONPath: .spec.predefinedACL
    name: PREDEFINED-ACL
    type: string
  - JSONPath: .spec.localPermission
    name: LOCAL-PERMISSION
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: storage.crossplane.io
  names:
    kind: Bucket
    listKind: BucketList
    plural: buckets
    singular: bucket
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A Bucket is a portable resource claim that may be satisfied by
        binding to a storage bucket PostgreSQL managed resource such as an AWS S3
        bucket or Azure storage container.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: BucketSpec specifies the desired state of a Bucket.
          properties:
            classRef:
              description: A PortableClassReference specifies the name of a portable
                resource class, in the same namespace as this resource claim, that
                will be used to dynamically provision a managed resource when the
                resource claim is created. The specified class kind must be aligned
                with the resource claim; e.g. a MySQLInstance kind resource claim
                always refers to a MySQLInstanceClass kind portable resource class.
                Omit the portable class reference if you wish to bind to a specific
                managed resource (known as static binding), or to use the default
                portable class for the resource claim's namespace (if any).
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
            localPermission:
              description: LocalPermission specifies permissions granted to a provider
                specific service account for this bucket, e.g. Read, ReadWrite, or
                Write.
              enum:
              - Read
              - Write
              - ReadWrite
              type: string
            name:
              description: Name specifies the desired name of the bucket.
              maxLength: 63
              minLength: 3
              type: string
            predefinedACL:
              description: PredefinedACL specifies a predefined ACL (e.g. Private,
                ReadWrite, etc) to be applied to the bucket.
              enum:
              - Private
              - PublicRead
              - PublicReadWrite
              - AuthenticatedRead
              type: string
            resourceRef:
              description: A ResourceReference specifies an existing managed resource,
                in any namespace, to which this resource claim should attempt to bind.
                Omit the resource reference to enable dynamic provisioning using a
                portable resource class; the resource reference will be automatically
                populated by Crossplane.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the name of
                a Secret, in the same namespace as this resource claim, to which any
                connection details for this resource claim should be written. Connection
                details frequently include the endpoint, username, and password required
                to connect to the managed resource bound to this resource claim.
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
          type: object
        status:
          description: A ResourceClaimStatus represents the observed status of a resource
            claim.
          properties:
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a managed resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
