apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: kubernetesapplicationresources.workload.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.template.kind
    name: TEMPLATE-KIND
    type: string
  - JSONPath: .spec.template.metadata.name
    name: TEMPLATE-NAME
    type: string
  - JSONPath: .status.clusterRef.name
    name: CLUSTER
    type: string
  - JSONPath: .status.state
    name: STATUS
    type: string
  group: workload.crossplane.io
  names:
    kind: KubernetesApplicationResource
    plural: kubernetesapplicationresources
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            secrets:
              description: Secrets upon which this application resource depends. These
                secrets will be propagated to the Kubernetes cluster to which this
                application is scheduled.
              items:
                type: object
              type: array
            template:
              description: A Template for a Kubernetes resource to be submitted to
                the KubernetesCluster to which this application resource is scheduled.
                The resource must be understood by the KubernetesCluster. Crossplane
                requires only that the resource contains standard Kubernetes type
                and object metadata.
              type: object
          required:
          - template
          type: object
        status:
          properties:
            clusterRef:
              description: Cluster to which this application has been scheduled.
              type: object
            remote:
              description: Remote status of the resource templated by this application
                resource.
              type: object
            state:
              description: State of the application.
              type: string
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
