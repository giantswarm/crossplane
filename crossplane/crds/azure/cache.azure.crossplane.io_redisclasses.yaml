
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: redisclasses.cache.azure.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: cache.azure.crossplane.io
  names:
    kind: RedisClass
    listKind: RedisClassList
    plural: redisclasses
    singular: redisclass
  scope: ""
  subresources: {}
  validation:
    openAPIV3Schema:
      description: RedisClass is the Schema for the resource class
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: RedisClassSpecTemplate is the Schema for the resource class
          properties:
            enableNonSslPort:
              description: EnableNonSSLPort specifies whether the non-ssl Redis server
                port (6379) is enabled.
              type: boolean
            location:
              description: Location in which to create this resource.
              type: string
            providerRef:
              description: ObjectReference contains enough information to let you
                inspect or modify the referred object.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: A ReclaimPolicy determines what should happen to managed
                resources when their bound resource claims are deleted.
              type: string
            redisConfiguration:
              additionalProperties:
                type: string
              description: RedisConfiguration specifies Redis Settings.
              type: object
            resourceGroupName:
              description: ResourceGroupName in which to create this resource.
              type: string
            shardCount:
              description: ShardCount specifies the number of shards to be created
                on a Premium Cluster Cache.
              type: integer
            sku:
              description: SKU of the Redis cache to deploy.
              properties:
                capacity:
                  description: 'Capacity specifies the size of Redis cache to deploy.
                    Valid values: for C family (0, 1, 2, 3, 4, 5, 6), for P family
                    (1, 2, 3, 4).'
                  maximum: 6
                  minimum: 0
                  type: integer
                family:
                  description: 'Family specifies which family to use. Valid values:
                    (C, P). Possible values include: ''C'', ''P'''
                  enum:
                  - C
                  - P
                  type: string
                name:
                  description: 'Name specifies what type of Redis cache to deploy.
                    Valid values: (Basic, Standard, Premium). Possible values include:
                    ''Basic'', ''Standard'', ''Premium'''
                  enum:
                  - Basic
                  - Standard
                  - Premium
                  type: string
              required:
              - capacity
              - family
              - name
              type: object
            staticIP:
              description: StaticIP address. Required when deploying a Redis cache
                inside an existing Azure Virtual Network.
              type: string
            subnetId:
              description: 'SubnetID specifies the full resource ID of a subnet in
                a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1'
              type: string
          required:
          - location
          - providerRef
          - resourceGroupName
          - sku
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
