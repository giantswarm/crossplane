
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: resourceclasses.core.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .provisioner
    name: PROVISIONER
    type: string
  - JSONPath: .providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: core.crossplane.io
  names:
    kind: ResourceClass
    listKind: ResourceClassList
    plural: resourceclasses
    singular: resourceclass
  scope: ""
  subresources: {}
  validation:
    openAPIV3Schema:
      description: ResourceClass is the Schema for the instances API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        parameters:
          additionalProperties:
            type: string
          description: Parameters holds parameters for the provisioner. These values
            are opaque to the  system and are passed directly to the provisioner.  The
            only validation done on keys is that they are not empty.  The maximum
            number of parameters is 512, with a cumulative max size of 256K
          type: object
        providerRef:
          description: ProviderReference is a reference to the cloud provider that
            will be used to provision the concrete cloud resource.
          properties:
            apiVersion:
              description: API version of the referent.
              type: string
            fieldPath:
              description: 'If referring to a piece of an object instead of an entire
                object, this string should contain a valid JSON/Go field access statement,
                such as desiredState.manifest.containers[2]. For example, if the object
                reference is to a container within a pod, this would take on a value
                like: "spec.containers{name}" (where "name" refers to the name of
                the container that triggered the event) or if no container name is
                specified "spec.containers[2]" (container with index 2 in this pod).
                This syntax is chosen only to have some well-defined way of referencing
                a part of an object. TODO: this design is not final and this field
                is subject to change in the future.'
              type: string
            kind:
              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
              type: string
            name:
              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
              type: string
            namespace:
              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
              type: string
            resourceVersion:
              description: 'Specific resourceVersion to which this reference is made,
                if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
              type: string
            uid:
              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
              type: string
          type: object
        provisioner:
          description: 'Provisioner is the driver expected to handle this ResourceClass.
            This is an optionally-prefixed name, like a label key. For example: "RDSInstance.database.aws.crossplane.io/v1alpha1"
            or "CloudSQLInstance.database.gcp.crossplane.io/v1alpha1". This value
            may not be empty.'
          type: string
        reclaimPolicy:
          description: reclaimPolicy is the reclaim policy that dynamically provisioned
            ResourceInstances of this resource class are created with
          type: string
      required:
      - providerRef
      - provisioner
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
