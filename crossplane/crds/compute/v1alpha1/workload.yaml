apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: workloads.compute.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.state
    name: STATUS
    type: string
  - JSONPath: .status.clusterRef.name
    name: CLUSTER
    type: string
  - JSONPath: .spec.targetNamespace
    name: NAMESPACE
    type: string
  - JSONPath: .spec.targetDeployment.metadata.name
    name: DEPLOYMENT
    type: string
  - JSONPath: .status.service.loadBalancer.ingress[0].ip
    name: SERVICE-EXTERNAL-IP
    type: string
  group: compute.crossplane.io
  names:
    kind: Workload
    plural: workloads
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            clusterSelector:
              type: object
            resources:
              description: Resources
              items:
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  secretName:
                    description: name of the generated resource secret
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                required:
                - secretName
                type: object
              type: array
            targetDeployment:
              type: object
            targetNamespace:
              type: string
            targetService:
              type: object
          required:
          - targetNamespace
          - targetDeployment
          - targetService
          type: object
        status:
          properties:
            clusterRef:
              type: object
            deployment:
              type: object
            deploymentRef:
              type: object
            service:
              type: object
            serviceRef:
              type: object
            state:
              type: string
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
